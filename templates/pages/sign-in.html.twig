{% extends "layouts/login.html.twig" %}

{% block title %}Sign In - Tickety{% endblock %}

{% block form %}
    <form method="POST" action="/api/auth/sign-in" id="loginForm" class="flex flex-col gap-4 max-md:gap-3">
        {% if error %}
            <p class="text-red-500 text-sm">{{ error }}</p>
        {% endif %}

        <!-- Email Field -->
        <div>
            <div class="flex justify-between items-center mb-2">
                <div class="font-medium text-gray-500">
                    Email Address
                    <span class="text-red-500"> *</span>
                </div>
            </div>
            <div class="relative">
                <input
                    type="email"
                    id="email"
                    name="email"
                    placeholder="Enter your email"
                    required
                    class="w-full h-13 px-3 border border-gray-100 rounded-xl text-body-lg text-gray-900 transition-colors outline-0 focus:!border-primary-500 focus:bg-primary-50 max-md:h-12"
                    value="{{ email|default('') }}"
                />
            </div>
        </div>

        <!-- Password Field -->
        <div>
            <div class="flex justify-between items-center mb-2">
                <div class="font-medium text-gray-500">
                    Password
                    <span class="text-red-500"> *</span>
                </div>
            </div>
            <div class="relative">
                <input
                    type="password"
                    id="password"
                    name="password"
                    placeholder="Enter your password"
                    required
                    class="w-full h-13 px-3 border border-gray-100 rounded-xl text-body-lg text-gray-900 transition-colors outline-0 focus:!border-primary-500 focus:bg-primary-50 max-md:h-12"
                />
                <button
                    type="button"
                    class="group absolute right-3 top-1/2 -translate-y-1/2 outline-0 before:absolute before:top-1/2 before:left-1/2 before:w-5.5 before:h-0.75 before:border-t before:border-white before:-translate-1/2 before:-rotate-45 before:transition-all before:bg-gray-400 hover:before:bg-gray-900 before:opacity-100"
                    onclick="togglePassword(); updatePasswordIcon(this)">
                    <svg class="size-6 fill-gray-400 transition-colors group-hover:fill-gray-900" viewBox="0 0 20 20" width="20" height="20">
                        <path d="M16.571 8.422C14.874 5.559 12.494 4 10 4S5.126 5.559 3.428 8.422a3.12 3.12 0 0 0 0 3.156C5.126 14.441 7.506 16 10 16s4.874-1.559 6.571-4.422a3.12 3.12 0 0 0 0-3.156zm-11.771.911C6.281 6.836 8.197 5.714 10 5.714s3.719 1.122 5.199 3.619a1.32 1.32 0 0 1 0 1.334c-1.48 2.497-3.397 3.619-5.199 3.619s-3.719-1.122-5.199-3.619a1.32 1.32 0 0 1 0-1.334zM10 8.286c.895 0 1.62.767 1.62 1.714s-.725 1.714-1.62 1.714S8.38 10.947 8.38 10l.001-.073c.126.047.262.073.404.073C9.456 10 10 9.424 10 8.714a1.35 1.35 0 0 0-.069-.427L10 8.286zm0 5.143c1.789 0 3.24-1.535 3.24-3.429S11.789 6.571 10 6.571 6.76 8.106 6.76 10s1.451 3.429 3.24 3.429z"></path>
                    </svg>
                </button>
            </div>
        </div>

        <!-- Remember Me & Forgot Password -->
        <div class="flex justify-between items-center">
            <label class="group flex items-center gap-2 cursor-pointer">
                <span class="relative flex justify-center items-center shrink-0 size-4 bg-white border border-gray-100 transition-colors rounded group-data-[checked]:border-primary-500 group-data-[checked]:bg-primary-500">
                    <input
                        type="checkbox"
                        name="remember"
                        class="sr-only"
                        onchange="toggleCheckmark(this)"
                    />
                    <svg class="fill-white opacity-0 transition-opacity size-3.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
                    </svg>
                </span>
                <span class="text-body-md text-gray-500">Keep me logged in</span>
            </label>
            <a href="/forgot-password" class="text-body-md font-medium text-primary-400 transition-colors hover:text-primary-600">
                Forgot Password?
            </a>
        </div>

        <!-- Submit Button -->
        <button
            type="submit"
            class="w-full mt-8 max-md:mt-5 h-13 px-3.75 border border-transparent rounded-xl text-body-lg font-semibold transition-all cursor-pointer bg-primary-500 text-white fill-white hover:bg-primary-600 disabled:pointer-events-none max-md:h-12"
            id="submitBtn"
        >
            Login
        </button>

        <!-- Sign Up Link -->
        <div class="mt-8 text-center text-body-lg text-gray-500 max-md:mt-5">
            Don't have an account?
            <a href="/create-account" class="font-medium text-primary-400 transition-colors hover:text-primary-600">
                Register
            </a>
        </div>
    </form>

    <script src="/js/auth.js"></script>
    <script>
        let isLoading = false;

        function togglePassword() {
            const input = document.getElementById('password');
            input.type = input.type === 'password' ? 'text' : 'password';
        }

        function updatePasswordIcon(button) {
            const input = document.getElementById('password');
            if (input.type === 'text') {
                button.classList.add('before:opacity-0');
                button.classList.remove('before:opacity-100');
            } else {
                button.classList.remove('before:opacity-0');
                button.classList.add('before:opacity-100');
            }
        }

        function toggleCheckmark(checkbox) {
            const span = checkbox.parentElement;
            if (checkbox.checked) {
                span.classList.add('group-data-[checked]:border-primary-500');
                span.classList.add('group-data-[checked]:bg-primary-500');
                span.querySelector('svg').style.opacity = '1';
            } else {
                span.classList.remove('group-data-[checked]:border-primary-500');
                span.classList.remove('group-data-[checked]:bg-primary-500');
                span.querySelector('svg').style.opacity = '0';
            }
        }

        document.getElementById('loginForm').addEventListener('submit', async function(e) {
            e.preventDefault();

            if (isLoading) return;

            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            if (!email || !password) {
                const errorDiv = this.querySelector('p');
                if (errorDiv) {
                    errorDiv.textContent = 'Please fill in both fields.';
                } else {
                    const p = document.createElement('p');
                    p.className = 'text-red-500 text-sm';
                    p.textContent = 'Please fill in both fields.';
                    this.insertBefore(p, this.firstChild);
                }
                return;
            }

            isLoading = true;
            const submitBtn = document.getElementById('submitBtn');
            submitBtn.disabled = true;
            const originalText = submitBtn.textContent;
            submitBtn.textContent = 'Logging in...';

            try {
                // Client-side authentication using localStorage
                const response = await AuthManager.signIn(email, password);

                if (response.success) {
                    setTimeout(() => {
                        window.location.href = '/dashboard';
                    }, 1000);
                } else {
                    const errorDiv = document.querySelector('p.text-red-500');
                    if (errorDiv) {
                        errorDiv.textContent = response.message || 'Invalid credentials';
                    } else {
                        const p = document.createElement('p');
                        p.className = 'text-red-500 text-sm';
                        p.textContent = response.message || 'Invalid credentials';
                        document.getElementById('loginForm').insertBefore(p, document.getElementById('loginForm').firstChild);
                    }
                }
            } catch (err) {
                const errorDiv = document.querySelector('p.text-red-500');
                if (errorDiv) {
                    errorDiv.textContent = 'Something went wrong. Please try again.';
                } else {
                    const p = document.createElement('p');
                    p.className = 'text-red-500 text-sm';
                    p.textContent = 'An unexpected error occurred.';
                    document.getElementById('loginForm').insertBefore(p, document.getElementById('loginForm').firstChild);
                }
            } finally {
                isLoading = false;
                submitBtn.disabled = false;
                submitBtn.textContent = originalText;
            }
        });
    </script>
{% endblock %}

{% block footer %}
    <a class="group flex items-center gap-1.5 text-gray-500 transition-colors hover:text-gray-900" href="/" title="Privacy">
        <svg class="!size-4 fill-gray-400 transition-colors group-hover:fill-gray-900" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4z"/>
        </svg>
        Privacy
    </a>
    <a class="group flex items-center gap-1.5 text-gray-500 transition-colors hover:text-gray-900" href="/" title="Terms">
        <svg class="!size-4 fill-gray-400 transition-colors group-hover:fill-gray-900" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-8-6z"/>
        </svg>
        Terms
    </a>
    <a class="group flex items-center gap-1.5 text-gray-500 transition-colors hover:text-gray-900" href="/" title="Get help">
        <svg class="!size-4 fill-gray-400 transition-colors group-hover:fill-gray-900" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>
        </svg>
        Get help
    </a>
{% endblock %}
